<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>S1 feedback — Submit</title>
  <style>
    :root {
      --bg: #f5f7fa;
      --card: #ffffff;
      --text: #1f2937;
      --muted: #6b7280;
      --primary: #3b82f6;
      --ring: rgba(59,130,246,.35);
      --error: #dc2626;
    }

    * { box-sizing: border-box; }
    html, body { height: 100%; }

    body {
      margin: 0;
      font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif;
      background: linear-gradient(135deg, #e0f2fe, #f5f7fa);
      color: var(--text);
      display: grid;
      place-items: center;
      padding: 24px;
    }

    .card {
      width: 100%;
      max-width: 640px;
      background: var(--card);
      border: 1px solid #e5e7eb;
      border-radius: 18px;
      padding: 28px;
      box-shadow: 0 10px 30px rgba(0,0,0,.1);
    }

    label { display: block; margin: 14px 0 8px; font-weight: 600; }

    select, textarea {
      width: 100%;
      padding: 12px 14px;
      border-radius: 12px;
      border: 1px solid #d1d5db;
      background: #f9fafb;
      color: var(--text);
      outline: none;
      transition: border-color .14s, box-shadow .14s;
    }

    select:focus, textarea:focus { border-color: var(--primary); box-shadow: 0 0 0 4px var(--ring); }

    .btn {
      margin-top: 18px; display: inline-flex; align-items: center; justify-content: center; gap: 8px;
      padding: 12px 16px; border-radius: 12px; border: none;
      background: linear-gradient(180deg, var(--primary), #2563eb); color: #fff; font-weight: 700; cursor: pointer; transition: background .2s;
    }
    .btn:hover { background: linear-gradient(180deg, #2563eb, #1d4ed8); }

    .muted { color: var(--muted); }
    .notice { margin-top: 12px; }
    .error { color: var(--error); }
  </style>
</head>
<body>
  <main class="card">
    <h1>S1 Points</h1>
    <p class="muted">Select your unit and share your points.</p>

    <form id="scouts-form"
          action="https://script.google.com/macros/s/AKfycbxs4xv6K-D9lv6lA559zk5zdgTB0LNTJH6c0UOzlY96ZxHABuRUt1Y8I5GNdS6D4Gw/exec"
          method="POST" novalidate>

      <input type="hidden" name="_redirect" value="https://lsasaida1.github.io/Majles-Points/thanks.html" />
      <input type="hidden" id="deviceInfo" name="deviceInfo" />
      <input type="hidden" id="geoInfo" name="geoInfo" />
      <input type="hidden" id="sessionId" name="sessionId" />

      <label for="unit">Select your unit</label>
      <select id="unit" name="unit" required>
        <option value="">-- Please choose an option --</option>
        <option>Girlscouts</option>
        <option>Boyscouts</option>
        <option>Pioneers</option>
        <option>Rovers</option>
      </select>

      <label for="points">Share your thoughts and problems</label>
      <textarea id="points" name="points" rows="7" placeholder="Write your thoughts and problems…" required minlength="1" maxlength="10000"></textarea>
      <div class="muted"><span id="count">0</span>/10000</div>

      <button id="submitBtn" class="btn" type="submit">Submit</button>
      <div id="msg" class="notice" aria-live="polite"></div>
    </form>
  </main>

  <script>
    const ENDPOINT = "https://script.google.com/macros/s/AKfycbxs4xv6K-D9lv6lA559zk5zdgTB0LNTJH6c0UOzlY96ZxHABuRUt1Y8I5GNdS6D4Gw/exec";
    const THANKS = "https://lsasaida1.github.io/Majles-Points/thanks.html";

    const form = document.getElementById('scouts-form');
    const points = document.getElementById('points');
    const count = document.getElementById('count');
    const msg = document.getElementById('msg');
    const submitBtn = document.getElementById('submitBtn');
    const deviceInfoInput = document.getElementById('deviceInfo');
    const geoInfoInput = document.getElementById('geoInfo');
    const sessionIdInput = document.getElementById('sessionId');

    // Collect device info
    const deviceInfo = {
      userAgent: navigator.userAgent,
      platform: navigator.platform,
      language: navigator.language,
      screen: `${window.screen.width}x${window.screen.height}`,
      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone
    };
    deviceInfoInput.value = JSON.stringify(deviceInfo);

    // Generate unique session ID
    const sessionId = localStorage.getItem('sessionId') || (Date.now() + "-" + Math.random().toString(36).slice(2));
    localStorage.setItem('sessionId', sessionId);
    sessionIdInput.value = sessionId;

    // Attempt geolocation with user permission
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        pos => {
          const { latitude, longitude } = pos.coords;
          geoInfoInput.value = JSON.stringify({ latitude, longitude, accuracy: pos.coords.accuracy });
        },
        err => {
          geoInfoInput.value = JSON.stringify({ error: err.message });
        }
      );
    } else {
      geoInfoInput.value = JSON.stringify({ error: "Geolocation not supported" });
    }

    points.addEventListener('input', () => count.textContent = points.value.length);

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      msg.textContent = "";
      if (!form.checkValidity()) {
        msg.textContent = "Please complete all required fields.";
        msg.className = "notice error";
        return;
      }

      submitBtn.disabled = true;
      submitBtn.textContent = "Sending…";

      const nonce = Date.now() + "-" + Math.random().toString(36).slice(2);
      const fd = new FormData(form);
      fd.append("nonce", nonce);

      try {
        await fetch(ENDPOINT, { method: "POST", mode: "no-cors", body: fd });
      } catch (_) {
        // Ignore network errors; redirect anyway
      } finally {
        window.location.replace(THANKS + "?t=" + Date.now());
      }
    });
  </script>
</body>
</html>
